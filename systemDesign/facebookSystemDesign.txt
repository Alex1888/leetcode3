update:收到很多邮件，基本都给推了，几乎都拿到了面试机会，已经有4人拿到offer
，还有很多人正在面试。
fb最近在大量招人，园区对面的楼快盖好了，空缺很多。

提供内推，社招校招皆可，天朝美帝皆可，如有兴趣，请发简历到fbrefer@163.com
申请码工职位的，请至少保证刷完一遍leetcode，或同等水平
最近一年申请过的，由于公司政策，请不要再申请



关于面试流程
社招的话
电面1-2轮，一般就是coding
onsite一般是4轮，2轮coding，1轮design，1轮behavior+coding
校招的话，那轮design也变成coding了



关于准备
1) algo/coding
建议大家刷一下leetcode，基本上cover到了大多数常见面试题，而且有可能碰到原题
。需要注意的是，仅仅解出来，做到bug free可能是不够的。代码的质量和速度也非常
重要。网上有一些别人给出的答案可以参考，尽量做到代码简洁清晰。速度上leetcode
上所有题都做到10分钟以内写完。


2) design
解这种题是个*交流*的过程，或者说是给出方案然后获取反馈的不断循环的过程。
一般的流程：
首先你要问清楚requirement；
然后可以讲一下high level architecture，就是分成哪几个component，互相之间如果
interact，在白板上画一画；
之后面试官可能会让你深入某个component detail讨论；
也有可能变换requirement让你重新设计

另外，f家还喜欢让你估算机器之类的，做一些back-of-envelopme calculation。所以
最好对一些计算机相关的基本常数，fb的用户量等等有个大概的了解。

准备的时候建议看看fb的design高频题。一方面有可能面试的时候刚好碰到这几个
topic，另一方面其实很多design都是相通的。
之前有个帖子讲这个，原帖已经被删了，这儿有个备份http://blog.csdn.net/sigh1988/article/details/9790337

另外补充一点我收集的材料

a) 首先你可以从整体上了解一下facebook的architecture
http://www.quora.com/Facebook-Engineering/What-is-Facebooks-arc
http://www.ece.lsu.edu/hpca-18/files/HPCA2012_Facebook_Keynote.
http://www.quora.com/Facebook-Engineering/What-have-been-Facebo
除了下面给出的一些资料，fb engineering page里还有很多不错的内容
https://www.facebook.com/Engineering

b) news feed
这里有个talk
http://www.infoq.com/presentations/Facebook-News-Feed
对应的slides
http://readme.skplanet.com/wp-content/uploads/2012/11/0-3_Faceb
还有一些quora上的讨论
http://www.quora.com/Activity-Streams/What-are-the-scaling-issu
http://www.quora.com/What-are-best-practices-for-building-somet
http://www.quora.com/What-is-the-best-storage-solution-for-buil

c) facebook chat
这里有两个notes，其中第二个里面还有相应的tech talk links
https://www.facebook.com/notes/facebook-engineering/facebook-chat/
14218138919
https://www.facebook.com/notes/facebook-engineering/chat-stability-and-
scalability/51412338919

d) typeahead search & graph search
关于typeahead search的tech talk和notes
https://www.facebook.com/video/video.php?v=432864835468
https://www.facebook.com/note.php?note_id=365915113919
https://www.facebook.com/note.php?note_id=389105248919

关于graph search的paper, tech talk, notes。其中paper很值得一看。
http://db.disi.unitn.eu/pages/VLDBProgram/pdf/industry/p871-cur
https://newsroom.fb.com/Photos-and-B-Roll/4362/Graph-Search-Whiteboard
https://www.facebook.com/note.php?note_id=10151240856103920
https://www.facebook.com/note.php?note_id=10151347573598920
https://www.facebook.com/note.php?note_id=10151361720763920
https://www.facebook.com/note.php?note_id=10151432733048920
https://www.facebook.com/note.php?note_id=10151755593228920

e) facebook messages
两个tech talks
http://www.youtube.com/watch?v=XAuwAHWpzPc
http://www.infoq.com/presentations/HBase-at-Facebook
以及eng notes
https://www.facebook.com/note.php?note_id=10150148835363920
https://www.facebook.com/note.php?note_id=10150162742108920

f) photo storage
相关的papers和notes
https://www.usenix.org/conference/osdi10/finding-needle-haystack-facebooks-
photo-storage
https://www.usenix.org/legacy/events/osdi10/tech/full_papers/Beaver.pdf
https://www.usenix.org/legacy/events/osdi10/tech/slides/beaver.pdf
https://www.facebook.com/note.php?note_id=76191543919

g) social graph data store
相关的note, video, paper
https://www.facebook.com/notes/facebook-engineering/tao-the-power-of-the-
graph/10151525983993920
https://www.usenix.org/conference/atc13/technical-sessions/presentation/
bronson
http://www.cs.cmu.edu/~pavlo/courses/fall2013/static/papers/117

h) tiny URL
这里有一些讨论
http://n00tc0d3r.blogspot.com/2013/09/big-data-tinyurl.html
http://stackoverflow.com/questions/742013/how-to-code-a-url-sho
http://stackoverflow.com/questions/3376163/what-are-the-things-

i) POI
参考这里
http://www.slideshare.net/mmalone/scaling-gis-data-in-nonrelati
http://www.mitbbs.ca/article_t/JobHunting/32476139.html


3) behavior，建议大家了解一下fb的culture，准备一下常见的behavior questions，
面试之前rehearsal一下。

最后面试临近的时候，可以再刷刷面经，找找感觉。像glassdoor, mitbbs/jobhunting
, careercup，这些上面就有很多。

如果有其它疑问，欢迎回复或者PM我。


System design设计手机上读取photo feeds的app。
功能： 读取好友的最近图片
阅览好友的相册
要求： 满足功能的同时减少对手机的能耗。

system desgin: 因为我是kernel背景，让我用mutex,cv实现一个semephor，说先考虑
单核，然后拓展到多核，但我只写了单核的就没时间了，不知道多核的会有什么不同，
要求code compilable，MD三哥从一进来就没好脸色，此轮negative

1) 给你10g文件，1g内存，数总共有多少个不同的数，答案是用bit来记录数字，总共
4b个interger,最多用0.5gb来记录，follow up是如果只有400m怎么办，答案是把数字
hash一下或者说scan文件多次，每次取尾数bits不一样的数，不用code

System design
问如何实现 Facebook messenger
给出了一个hierarchical infrascture.

Design timeline的group权限，比如说user发一条status可以选择对某个group的好
友可见。题目很简单，但是会讨论到facebook用户规模的估算，服务器估算，social 
graph的存储。感觉system design只要讲个大概思路就行，面试官不会去纠结太细节的
东西。

 一些和facebook相关的system design.网页上用markup language define了一些 
object, how to store these objects, how to define relationship between 
objects and users, how to search for relationship, how to find recently 
listened song by one user, one song may be listend by the same user in 
multiple times. etc.


 美国人， 系统设计，设计各系统能返回 top 10 listened songs from your 
friends.

Given a location (a coordinate), return top 100 nearest places.
Follow up, given a location, return top 100 events within x months in 
nearest places。follow up 其实就是多加一个时间维度。

提出的方案就是对平面坐标系做grid，每个grid里的locations放到一台机器上。搜索
的时候就是针对input的location找到候选的grids(以某个半径画个圆)，再从中通过
map-reduce找到前100个location。 

可以根据grid里location的密度或者访问量决定是不是要再做partition以提高
scalability。

follow up的话就是多加一个dimension代表时间。


白人，设计一个在线图片编辑系统，完全没有经验，只能按版上的partition, 
backup, cache等瞎说。边引导边回答。当面给的feedback都还算positive。


第四轮：design，设计手机系统，可以查看周围的好友，饭店，电影院等等


第一面system design. 先问怎么求submatrix的和，回答说先预先计算好 (0, 0), (i,
j)的和，然后可以用这个和求其它的和。以为他会顺着这个问数据大了怎么design 
system，结果没有，问了个跟这个题毫不相关的，怎么检测一个程序为什么慢。然后就
回答先确定bottleneck是cpu, disk io, 还是 network io. 然后针对每项他都详细问
怎么做。交流的过程中有时候没太明白他的问题吧。反正这一面的结果很不好，当天就
给我加了另外一面system design. 最后还是挂在这一面上。


system design. 问的是 shorten url. 因为之前准备过这个题，所以回答应该
是非常好的。面试官没问我是否见过这个题，我也就没说我准备过了。

电面一面：
给一堆F的用户，以及朋友关系，朋友之间的关系是双向的。问能否将朋友的关系图分
成两个partition。使得任何有直接朋友关系的两个人必须处在不同的partition里。


第二轮系统设计：让设计分布式的large scale的producer和consumer问题。就是有一
堆机器是producer，一堆机器是consumer。后来顺便写了一道coding题，范围变成是单
机的producer和consumer，实现produce和consume函数，其实就是相当于fix size的
cache的add和pop问题，不用考虑多线程


 一个看上去很强壮的老美，广告组的，问设计题。FB用户每天发非常多的status 
update，要求设计一个系统，能够对最近几天内的update进行关键字搜索。我回答建一
个index，每个单词对应一个status update id的列表，查询结果是取列表的交集。我
对大数据处理完全没经验，不清楚这轮会被鄙视到什么程度，反正从结果看是pass了……
5. 又是中国哥们，一看就像技术牛人。有两个长度为n的数组，分别存放螺钉和螺母。
它们之间是一一对应的关系，而没有大小相同的螺钉或大小相同的螺母。现在有个机器
人，它能拿起一个螺钉和一个螺母，试着把它们拧在一起。如果成功，返回0，如果螺
钉大于螺母返回1，小于则返回-1。初始情况下两个数组是shuffle过的，需要设计一个
算法让机器人帮你sort两个数组，使得两边相同index的螺钉和螺母是一对。
这题虽然不是新题但我也没见过，虽然上来就想到肯定得用quick sort的思路，还是一
时纠结住了。经提示才想出正确算法，是两边同时做partition。代码倒是很容易写，
写完后又被要求分析复杂度。


含有大量URL的文件里查找频率最高的K个URL。先给单机哈希表的解法，内存不够的
情况，给了按哈希值把大文件拆成小文件的解法。接着被问并行化，给了MapReduce的
解法。接着被问哈希表相关的计算题，M个slots的哈希表（哈希值范围是1~M，用链表
处理冲突），往里放了N个元素，假设他们的哈希值是随机的均匀分布，问slots里元素
个数的分布，也就是balls and bins的问题。不用coding。


Design a key-value store.
2. Design Google search
3. Architect a world-wide video distribution system
4. Build Facebook chat
5. Design News Feed


第一轮system design是一位很客气很nice的国人大哥：有很多台机器，设计一个类似
web crawler的一个系统。然后让我把每台机器上面跑的software的module diagram画
出来。然后还给了上下行带宽，让估算时间。


题目很简单就是设计news feed，上来我就想按系统设计的思路来讲，结果那哥跟我说
不管系统上的问题，就问我怎么拿Json来传数据生成一个news feed。然后画了一个
news feed， 就跟我们看到的facebook的news feed一样，然后问我news feed上面的各
个组件要在客户端生成json里面的数据是怎么样的。
比如 {
    	Name:
    	Image:
    	Like:
    	Comment:
    	.
    	.
    	.
}
然后整个过程就是讨论JSON里面的具体数据应该是什么样的。
另外还有一个问题就是coding的那几轮都只出了一个问题其中有一轮甚至都没follow 
up， 但是我确定我写的很快而且一次下来bug free的但是还是只出了一个问题，这是
正常还是想黑我的节奏。。。

===========================我是分割线==================
稍微总结一下

1. 入门级的news feed
http://www.quora.com/What-are-best-practices-for-building-somet
http://www.infoq.com/presentations/Scale-at-Facebook
http://www.infoq.com/presentations/Facebook-Software-Stack
一般的followup question是估算需要多少server
另外这个帖子有讨论
http://www.mitbbs.ca/article_t/JobHunting/32463885.html
这篇文章稍微提到要怎么approach这种题，可以稍微看看
http://book.douban.com/reading/23757677/


2. facebook chat,这个也算是挺常问的
http://www.erlang-factory.com/upload/presentations/31/EugeneLet
https://www.facebook.com/note.php?note_id=14218138919
http://www.cnblogs.com/piaoger/archive/2012/08/19/2646530.html
http://essay.utwente.nl/59204/1/scriptie_J_Schipers.pdf

3. typeahead search/search suggestion，这个也常见
https://www.facebook.com/video/video.php?v=432864835468
问题在这个帖子里被讨论到，基本上每个问题，在视频里都有回答
http://www.mitbbs.com/article_t/JobHunting/32438927.html


4. Facebook Messaging System(有提到inbox search, which has been asked before）
messaging system就是一个把所有chat/sms/email之类的都结合起来的一个系统
http://www.infoq.com/presentations/HBase-at-Facebook
http://sites.computer.org/debull/A12june/facebook.pdf
http://www.slideshare.net/brizzzdotcom/facebook-messages-hbase/
https://www.youtube.com/watch?v=UaGINWPK068


5. 任给一个手机的位置信号(经纬度)，需要返回附近5mile 的POI
这个这里有讨论，这题貌似nyc很爱考...
http://www.mitbbs.ca/article0/JobHunting/32476139_0.html


6. Implement second/minute/hour/day counters
这题真不觉得是system design，但万一问道，还是要有准备，貌似在总部面试会被问
道....
这个帖子有讨论
http://www.mitbbs.com/article_t/JobHunting/32458451.html


7. facebook photo storage，这个不太会被问起，但是知道也不错
https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf
https://www.facebook.com/note.php?note_id=76191543919


8. facebook timeline,这个也不太是个考题，看看就行了
https://www.facebook.com/note.php?note_id=10150468255628920
http://highscalability.com/blog/2012/1/23/facebook-timeline-bro


除了这些，准备一下这些题目
implement memcache
http://www.adayinthelifeof.nl/2011/02/06/memcache-internals/

implement tinyurl（以及distribute across multiple servers)
http://stackoverflow.com/questions/742013/how-to-code-a-url-sho

determine trending topics(twitter)
http://www.americanscientist.org/issues/pub/the-britney-spears-
http://www.michael-noll.com/blog/2013/01/18/implementing-real-t

copy one file to multiple servers
http://vimeo.com/11280885

稍微知道一下dynamo key value store，以及google的gfs和big table


另外推荐一些网站
http://highscalability.com/blog/category/facebook
这个high scalability上有很多讲system design的东西，不光是facebook的，没空的
话，就光看你要面试的那家就好了..
facebook engineering blog
http://www.quora.com/Facebook-Engineering/What-is-Facebooks-arc
http://stackoverflow.com/questions/3533948/facebook-architectur

其他家的
http://www.quora.com/What-are-the-top-startup-engineering-blogs


==================================================================
在说说怎么准备这样的面试
首先如果你连availability/scalability/consistency/partition之类的都不是太有概
念的话，我建议先去wikipedia或者找一个某个大学讲这门课的网站稍微看一下，别一
点都不知道
这个链接也不错
http://www.aosabook.org/en/distsys.html

如果你这些基本的东西都还知道，那么我觉得你就和大部分毫无实际经验的人差不多一
个水平...
能做的就是一点一点去准备，如果你还有充足的时间的话，建议从你面试的那家公司的
engineering blog看起，把人家用的technology stack/product都搞清楚，然后在把能
找到的面试题都做一遍呗....我们做coding题说白了不也是题海战术...而且你如果坚
持看下去，真的会看出心得，你会发现很多地方都有相同之处，看多了就也能照葫芦画
瓢了...

再有就是面试的时候应该怎么去approach这种题，我说说我的做法
1. product spec/usage scenario 和面试者confirm这个东西到底是做什么的
可以先列出来几个major functionality，然后有时间的话，再补充一些不重要的
把你想的都写下来

2. define some major components
就是画几个圈圈框框的，每个发表一番您的高见....然后讲他们之间怎么interact

以上是question specific的东西，
这个讲完了，我们可以讲一些每道题都是用的，比如说
怎么scale/怎么partition/怎么实现consistency，这些东西，可以套用到任何题上



当然了，我们遇到的题和解题的方法可能都有些出入，不见得每道题有一个路数下来，
最重要的是，讲题的时候要有条理，画图要清楚，保持和面试官的交流，随时问一下人
家的意见。

我能想到的就这么多，欢迎大家交流，希望大家都能找到理想的工作.
